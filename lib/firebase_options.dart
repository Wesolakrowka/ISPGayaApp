// File generated by FlutterFire CLI. This file contains the Firebase configuration options for different platforms.
// ignore_for_file: type=lint // This directive is used to ignore linting rules for this file.

import 'package:firebase_core/firebase_core.dart' show FirebaseOptions; // Importing FirebaseOptions from the firebase_core package.
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform; // Importing necessary Flutter foundation classes for platform detection.

/// Default [FirebaseOptions] for use with your Firebase apps.
/// This class provides the Firebase configuration options based on the platform the app is running on.
/// Example usage:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform, // Initialize Firebase with the current platform options.
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    // This getter returns the appropriate FirebaseOptions based on the current platform.
    if (kIsWeb) {
      return web; // If the platform is web, return the web options.
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android; // Return Android options if the platform is Android.
      case TargetPlatform.iOS:
        return ios; // Return iOS options if the platform is iOS.
      case TargetPlatform.macOS:
        return macos; // Return macOS options if the platform is macOS.
      case TargetPlatform.windows:
        return windows; // Return Windows options if the platform is Windows.
      case TargetPlatform.linux:
        // If the platform is Linux, throw an error indicating that options are not configured.
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        // If the platform is not supported, throw an error.
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // Configuration options for the web platform.
  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyBXZBs2BuJ-s-Kc-qK2uVl8umD3OwkwVnw', // API key for web.
    appId: '1:410919083565:web:a5c5f86f8b8ce1920462a4', // App ID for web.
    messagingSenderId: '410919083565', // Messaging sender ID for web.
    projectId: 'ispgayaapp-143a0', // Project ID for web.
    authDomain: 'ispgayaapp-143a0.firebaseapp.com', // Auth domain for web.
    storageBucket: 'ispgayaapp-143a0.firebasestorage.app', // Storage bucket for web.
    measurementId: 'G-CLYXFZKJRH', // Measurement ID for web.
  );

  // Configuration options for the Android platform.
  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyAnLdgb5Xy54BGIHqet_Ni-AStVa6F1YBQ', // API key for Android.
    appId: '1:410919083565:android:b1524266ee8b55950462a4', // App ID for Android.
    messagingSenderId: '410919083565', // Messaging sender ID for Android.
    projectId: 'ispgayaapp-143a0', // Project ID for Android.
    storageBucket: 'ispgayaapp-143a0.firebasestorage.app', // Storage bucket for Android.
  );

  // Configuration options for the iOS platform.
  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyD0qmZL1LuAdoXV0SUC8FPTWvn_A7xkjig', // API key for iOS.
    appId: '1:410919083565:ios:01abfd69e7b7e6da0462a4', // App ID for iOS.
    messagingSenderId: '410919083565', // Messaging sender ID for iOS.
    projectId: 'ispgayaapp-143a0', // Project ID for iOS.
    storageBucket: 'ispgayaapp-143a0.firebasestorage.app', // Storage bucket for iOS.
    iosBundleId: 'com.example.applicationispgaya', // iOS bundle ID for the app.
  );

  // Configuration options for the macOS platform.
  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyD0qmZL1LuAdoXV0SUC8FPTWvn_A7xkjig', // API key for macOS.
    appId: '1:410919083565:ios:01abfd69e7b7e6da0462a4', // App ID for macOS.
    messagingSenderId: '410919083565', // Messaging sender ID for macOS.
    projectId: 'ispgayaapp-143a0', // Project ID for macOS.
    storageBucket: 'ispgayaapp-143a0.firebasestorage.app', // Storage bucket for macOS.
    iosBundleId: 'com.example.applicationispgaya', // iOS bundle ID for macOS.
  );

  // Configuration options for the Windows platform.
  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyBXZBs2BuJ-s-Kc-qK2uVl8umD3OwkwVnw', // API key for Windows.
    appId: '1:410919083565:web:bb77e87faeb4acf60462a4', // App ID for Windows.
    messagingSenderId: '410919083565', // Messaging sender ID for Windows.
    projectId: 'ispgayaapp-143a0', // Project ID for Windows.
    authDomain: 'ispgayaapp-143a0.firebaseapp.com', // Auth domain for Windows.
    storageBucket: 'ispgayaapp-143a0.firebasestorage.app', // Storage bucket for Windows.
    measurementId: 'G-E3D1TG9LW9', // Measurement ID for Windows.
  );
}
